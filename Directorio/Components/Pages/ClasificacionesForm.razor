@page "/clasificaciones/nueva"
@page "/clasificaciones/editar/{Id:int}"
@inject IRepositorioClasificaciones _repositorioClasificaciones
@inject NavigationManager _navigationManager
<PageTitle>Clasificaciones</PageTitle>
<h3>@_mensaje Clasificación</h3>

<EditForm Model="_clasificacion" FormName="frmClasificacion" OnValidSubmit="GuardarClasificacion">
    <DataAnnotationsValidator />
    @*     <ValidationSummary /> *@
    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="_clasificacion.Nombre" />
        <ValidationMessage For="() => _clasificacion.Nombre" />
    </div>
    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a type="button" class="btn btn-danger" href="/clasificaciones">Cancelar</a>
    </div>

</EditForm>

@code {
    [Parameter]
    public int Id { get; set; } // Propiedad para recibir el ID de la URL
    private Clasificacion _clasificacion = new Clasificacion(); // Inicializa la nueva persona
    private string _mensaje = "Nueva ";


    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            _clasificacion = await _repositorioClasificaciones.Get(Id);
            _mensaje = "Editar ";
        }
    }


    private async Task GuardarClasificacion()
    {
        if (Id > 0)
        {
            await _repositorioClasificaciones.Update(_clasificacion);
        }
        else
        {
            await _repositorioClasificaciones.Add(_clasificacion);
        }
        _navigationManager.NavigateTo("/clasificaciones");
    }

}
